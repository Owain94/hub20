# Generated by Django 4.0 on 2022-05-27 02:01
import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
import django.contrib.postgres.fields.ranges
import django.db.models.deletion
from django.contrib.postgres.operations import HStoreExtension
from django.db import migrations, models

import hub20.apps.core.fields
import hub20.apps.ethereum.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name="BaseWallet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "address",
                    hub20.apps.core.fields.EthereumAddressField(db_index=True, unique=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Block",
            fields=[
                (
                    "hash",
                    hub20.apps.core.fields.HexField(
                        max_length=64, primary_key=True, serialize=False
                    ),
                ),
                ("number", models.PositiveIntegerField(db_index=True)),
                ("base_fee_per_gas", models.PositiveBigIntegerField(null=True)),
                ("timestamp", models.DateTimeField()),
                ("parent_hash", hub20.apps.core.fields.HexField(max_length=64)),
                (
                    "uncle_hashes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=hub20.apps.core.fields.HexField(max_length=64), size=None
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BlockchainTransfer",
            fields=[
                (
                    "transfer_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.transfer",
                    ),
                ),
                ("address", hub20.apps.core.fields.EthereumAddressField(db_index=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("core.transfer",),
        ),
        migrations.CreateModel(
            name="Chain",
            fields=[
                ("id", models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="EVM-compatible network", max_length=128)),
                ("highest_block", models.PositiveIntegerField()),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("hash", hub20.apps.core.fields.HexField(db_index=True, max_length=64)),
                ("from_address", hub20.apps.core.fields.EthereumAddressField(db_index=True)),
                ("to_address", hub20.apps.core.fields.EthereumAddressField(db_index=True)),
                ("receipt", django.contrib.postgres.fields.hstore.HStoreField()),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="ethereum.block",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ColdWallet",
            fields=[
                (
                    "basewallet_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="ethereum.basewallet",
                    ),
                ),
            ],
            bases=("ethereum.basewallet",),
        ),
        migrations.CreateModel(
            name="HierarchicalDeterministicWallet",
            fields=[
                (
                    "basewallet_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="ethereum.basewallet",
                    ),
                ),
                ("index", models.PositiveIntegerField(unique=True)),
            ],
            bases=("ethereum.basewallet",),
        ),
        migrations.CreateModel(
            name="KeystoreAccount",
            fields=[
                (
                    "basewallet_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="ethereum.basewallet",
                    ),
                ),
                ("private_key", hub20.apps.core.fields.HexField(max_length=64, unique=True)),
            ],
            bases=("ethereum.basewallet",),
        ),
        migrations.CreateModel(
            name="Web3Provider",
            fields=[
                (
                    "paymentnetworkprovider_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.paymentnetworkprovider",
                    ),
                ),
                ("url", hub20.apps.ethereum.fields.Web3ProviderURLField()),
                ("client_version", models.CharField(max_length=300, null=True)),
                ("requires_geth_poa_middleware", models.BooleanField(default=False)),
                ("supports_pending_filters", models.BooleanField(default=False)),
                ("supports_eip1559", models.BooleanField(default=False)),
                ("max_block_scan_range", models.PositiveIntegerField(default=5000)),
                (
                    "chain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="providers",
                        to="ethereum.chain",
                    ),
                ),
            ],
            bases=("core.paymentnetworkprovider",),
        ),
        migrations.CreateModel(
            name="TransactionDataRecord",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("hash", hub20.apps.core.fields.HexField(db_index=True, max_length=64)),
                ("from_address", hub20.apps.core.fields.EthereumAddressField(db_index=True)),
                ("to_address", hub20.apps.core.fields.EthereumAddressField(db_index=True)),
                ("data", django.contrib.postgres.fields.hstore.HStoreField()),
                (
                    "chain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transaction_data",
                        to="ethereum.chain",
                    ),
                ),
            ],
            options={
                "unique_together": {("hash", "chain")},
            },
        ),
        migrations.CreateModel(
            name="NativeToken",
            fields=[
                (
                    "basetoken_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.basetoken",
                    ),
                ),
                (
                    "chain",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="native_token",
                        to="ethereum.chain",
                    ),
                ),
            ],
            bases=("core.basetoken",),
        ),
        migrations.CreateModel(
            name="Explorer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200, null=True)),
                ("url", models.URLField()),
                ("standard", models.CharField(max_length=200, null=True)),
                (
                    "chain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="explorers",
                        to="ethereum.chain",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventIndexer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("last_block", models.PositiveBigIntegerField(default=1)),
                (
                    "chain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="indexers",
                        to="ethereum.chain",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Erc20Token",
            fields=[
                (
                    "basetoken_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.basetoken",
                    ),
                ),
                ("address", hub20.apps.core.fields.EthereumAddressField()),
                (
                    "chain",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tokens",
                        to="ethereum.chain",
                    ),
                ),
            ],
            bases=("core.basetoken",),
        ),
        migrations.CreateModel(
            name="ChainMetadata",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("short_name", models.SlugField(null=True)),
                (
                    "chain",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="info",
                        to="ethereum.chain",
                    ),
                ),
                (
                    "rollup_for",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rollups",
                        to="ethereum.chain",
                    ),
                ),
                (
                    "sidechain_for",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sidechains",
                        to="ethereum.chain",
                    ),
                ),
                (
                    "testing_for",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="testnets",
                        to="ethereum.chain",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BlockchainTransferReceipt",
            fields=[
                (
                    "transferreceipt_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.transferreceipt",
                    ),
                ),
                (
                    "transaction_data",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ethereum.transactiondatarecord",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.transferreceipt",),
        ),
        migrations.CreateModel(
            name="BlockchainTransferConfirmation",
            fields=[
                (
                    "transferconfirmation_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.transferconfirmation",
                    ),
                ),
                (
                    "transaction",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="ethereum.transaction"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.transferconfirmation",),
        ),
        migrations.CreateModel(
            name="BlockchainPaymentRoute",
            fields=[
                (
                    "paymentroute_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.paymentroute",
                    ),
                ),
                ("payment_window", django.contrib.postgres.fields.ranges.IntegerRangeField()),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blockchain_routes",
                        to="ethereum.basewallet",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.paymentroute",),
        ),
        migrations.CreateModel(
            name="BlockchainPaymentNetwork",
            fields=[
                (
                    "paymentnetwork_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.paymentnetwork",
                    ),
                ),
                (
                    "chain",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="ethereum.chain"
                    ),
                ),
            ],
            bases=("core.paymentnetwork",),
        ),
        migrations.CreateModel(
            name="BlockchainPayment",
            fields=[
                (
                    "payment_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.payment",
                    ),
                ),
                (
                    "transaction",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="ethereum.transaction"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.payment",),
        ),
        migrations.AddField(
            model_name="block",
            name="chain",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="blocks",
                to="ethereum.chain",
            ),
        ),
        migrations.AddField(
            model_name="basewallet",
            name="transactions",
            field=models.ManyToManyField(to="ethereum.Transaction"),
        ),
        migrations.CreateModel(
            name="WalletBalanceRecord",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "amount",
                    hub20.apps.core.fields.TokenAmountField(decimal_places=18, max_digits=32),
                ),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="ethereum.block"
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="core.basetoken"
                    ),
                ),
                (
                    "wallet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="balance_records",
                        to="ethereum.basewallet",
                    ),
                ),
            ],
            options={
                "unique_together": {("wallet", "currency", "block")},
            },
        ),
        migrations.CreateModel(
            name="TransferEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "amount",
                    hub20.apps.core.fields.TokenAmountField(decimal_places=18, max_digits=32),
                ),
                ("sender", hub20.apps.core.fields.EthereumAddressField()),
                ("recipient", hub20.apps.core.fields.EthereumAddressField()),
                ("log_index", models.SmallIntegerField(null=True)),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="core.basetoken"
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfers",
                        to="ethereum.transaction",
                    ),
                ),
            ],
            options={
                "ordering": ("transaction", "log_index"),
                "unique_together": {("transaction", "log_index")},
            },
        ),
        migrations.AddConstraint(
            model_name="transaction",
            constraint=models.UniqueConstraint(
                fields=("hash", "block"), name="unique_tx_per_block"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="explorer",
            unique_together={("url", "chain")},
        ),
        migrations.AddConstraint(
            model_name="eventindexer",
            constraint=models.UniqueConstraint(
                fields=("chain", "name"), name="unique_name_per_chain"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="erc20token",
            unique_together={("chain", "address")},
        ),
        migrations.AlterUniqueTogether(
            name="block",
            unique_together={("chain", "hash", "number")},
        ),
    ]
